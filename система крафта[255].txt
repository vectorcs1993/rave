Алгоритм размещения предмета <Item> в комнате <Room>, метод комнаты размещающий предметы в графе в соответствии с матрицей размещения.

	void addItem(int x, int y, int id, int count) {
		Item item = new Item(id);
		for () {									//цикл перебирает все соседник клетки в соответствией с матрицей размещения.
			ix=  									//корректировка координаты х
			iy=									//корректировка координаты у
			ObjectList objects = getObjectsNoDroids(ix, iy); 			//получаем список объектов без учета дронов
			if (objects.isEmpty()) {						//если в клетке нет объектом (дроны не учитываются)
				if (count>item.stack)	{					//проверяем удается ли разместить все количество count на одной клетке
					items.add(new ItemMap(ix, iy, item, item.stack));	//размещаем объект с переполненным стэком
					count=count-item.stack;					//уменьшаем количество размещаемых предметов
					continue;						//продолжаем поиск
				} else {
					items.add(new ItemMap(ix, iy, item, count));		//размещаем объект с количеством count
					break;							//прекращаем поиск, объект размещен
				}
			} else {								//если клетка не свободна и объекты уже присутствуют
				Storage storage = objects.getStorageFree();			//запрос на свободный контейнер (т.е. в котором достаточно места для размещения хотя бы одной единицы предмета)
				if (storage!=null) {						//если он обнаружен
					int resultAdd = addItemToStorage(storage, Item item, count);	//размещает предметы, и запрашивает разместилось ли все количество
					if (resultAdd==0)   						//если все предметы успешно разместились 
						return;							//завершение алгоритма
					else {								//если остались предметы после размещения							
						count=resultAdd;					//устанавливает значение count
						continue;						//продолжает поиск что бы разместить оставшиеся предметы
					}		
				} else {							//если контейнер не обнаружен в списке объектов
					if (node[ix][iy].solid)					//если проверка показала что клетка твердая, то
						continue;					//перейти на след. клетку в матрице размещения
					else {							//если клетка не твердая, то
						for (Object object: objects) {			//перебор объектов
							if (objects instanceof Layer) {						//если объект класса Layer
								int resultAdd = addItemMap(int x, int y, Item item, count);	//размещает предметы, и запрашивает разместилось ли все количество
								if (resultAdd==0)   						//если все предметы успешно разместились 
									return;							//завершение алгоритма
								else {								//если остались предметы после размещения							
									count=resultAdd;					//устанавливает значение count
									break;							//продолжает поиск что бы разместить оставшиеся предметы
								}
							} else if (objects instanceof ItemMap) {				//если объект класса ItemMap
								ItemMap itemMap = (ItemMap)object;				//определяет объект класса ItemMap для работы с ним
								int newCount = count+itemMap.count;
								if (newCount>itemMap.item.stack) {				//проверяем не переполнен ли стэк объекта itemMap, если да, то
									itemMap.count=itemMap.item.stack;			//устанавливаем значение itemMap.count равным значению стэка вложенного предмета
									count=newCount-itemMap.item.stack;			//вычисляем сколько предметов осталось после размещения
									break;							//продолжаем поиск что бы разместить оставшиеся предметы
								} else {							//если стэк объекта itemMap не переполнен
									itemMap.count=newCount;					//устанавливает значение count
									return;							//продолжает поиск что бы разместить оставшиеся предметы

								}
							}
						}
					}
				}
			}
		}

	}
==метод размещающий предметы на поверхности и возвращающий количество неразмещенных предметов 
int addItemMap(int x, int y, Item item, count) {			//размещение объекта с обратным вызовом, возвращает количество предметов которое осталось после размещения
	if (count>item.stack)	{					//проверяем удается ли разместить все количество count на одной клетке
		items.add(new ItemMap(ix, iy, item, item.stack));	//размещаем объект с переполненным стэком				
		return count-item.stack;				//возвращаем количество размещенных предметов
	} else {							//если количество count не превышает стэк предмета тогда
		items.add(new ItemMap(ix, iy, item, count));		//размещаем объект с количеством count
		return 0;						//возвращаем 0 т.к. все предметы успешно размещены
	}
}

==метод размещающий предметы в контейнере и возвращающий количество неразмещенных предметов 
int addItemToStorage(Storage storage, Item item, count) {		//размещение объекта с обратным вызовом, возвращает количество предметов которое осталось после размещения
	int item_add=0;							//инициализация счетчика размещенных предметов
	for (int b=0; b<count; b++) {					//цикл соответствующий количеству размещаемых предметов
		if (storage.isFreeCapacity(item.weight)<<<<<<сделать зависимость от веса) {				//каждый такт проверка на свободное место в контейнере, если место есть то
			storage.add(new Item(id));			//размещаем предмет	
			item_add++;					//обновляем счетчик размещения	
			if (item_add==count)				//проверяет размещщены ли все предметы		
				return 0;				//если да, то возвращает 0
		} else 							//если контейнер переполнен
			return count-item_add;				//возвращает количество не размещенных предметов
		
	}
}







CRAFT (конструирование) - навык отвечающий за создание предметов, от него зависит так же и 
скорость создания. 	

		
Генерируемые ресурсы:
			руда железная, (добывается из горных пород или извлекается из залежей)
			руда медная, (добывается из горных пород или извлекается из залежей)
			древесина, (извлекается только из деревьев)
			каучук,  (извлекается только из деревьев)
			нефть,  (добывается из нефтяных скважин)
			камень, (добывается из горных пород или извлекается из залежей)
			кварц, (добывается из горных пород (исключительно на местности с песчаным покрытием))
			металлолом (извлекается только из заброшенных фабрик и неисправных дронов)

Заготовки и детали (класс Fabrica, изделия из одного компонента): 

База		цех заготовительный (обработка строительных заготовок):
    			доска х2 (дерево х1), (нужна для постройки поверхностей и защитных сооружений)
    			блок каменный х1 (камень х5), (нужен для постройки поверхностей и защитных сооружений)
	
Каменные печи	цех литейный (литые изделия):
			блок стальной х1 (руда железная х2), (нужен для крафта массивных предметов)
			ось стальная х5 (блок стальной х1), 
    			ось медная х10 (руда медная х1),
    			лист стальной х2 (блок стальной х1), 
			резина х1 (каучук х5)
			 перенести в химкомбинат шланг х1 (резина х8)
			стекло х1 (кварц х3)	

Переплавка	цех плавильный (переплавка металлолома):
			блок стальной х5 (металлолом х1),
			

Нефтепереработка нефтеперерабатывающий комплекс (нефтесодержащие изделия):
			тяжелая нефть х4 (нефть х5),
			легкая нефть х1 (нефть х5),
			попутный газ х1 (нефть х7),
			
Химическая	 химкомбинат (изделия химической промышленности):
промышленность		кремний х1 (кварц х2)
			полупроводник х1 (кремний х1),
			топливо дизельное х1 (легкая нефть х2),
			текстолит х1 (пластмасса х2),
			смазка х1 (тяжелая нефть х2),
			сера х1 (попутный газ х2)
			порох (попутный газ х2, уголь х2)
			пластмасса (попутный газ х1, уголь х2),

ЧПУ		цех механический (высокоточые изделия): 
			ствол пулемета х1(ось стальная х1)
			цевье пулемета х1(блок стальной х1)



База		цех боеприпасов
			патрон (гильза х1, порох х1)
База		цех кабельный
			провод (ось медная х1, пластмасса х1)
Электроника	фабрика электронных компонентов
			компонент электронный (полупроводник х1, пластмасса х1)
			плата печатная (пластина медные х1, текстолит х1)

			
			
Сборочные единицы (класс Bench, изделия из более одного компонента ,количество по умолчанию х1):
База		сборочный стол	
    			комплект ремонтный (пластина стальная х2, провод х1)
			пулемет (ствол пулемета х1, цевье пулемета х1)			
			
		
Электротехника	участок сборки аппаратуры	
			блок электронный (компонент электронный х5, плата печатная х1)
			процессор (полупроводник х25, лист стальной х1)
		
Робототехника	участок сборки робототехники
			шасси дрона (ось стальная х20, пластина стальная х2, резина х5)
    			корпус дрона (пластина стальная х10)
			блок управления дроном (процессор х1, блок электронный х1)
			корпус турели (пластина стальная х20)


Ко всем классам потомкам Object сделать флаг removed, и интерфейс на уничтожение и функцию .remove()
, а так же заменить список целых чисел на список объектов, уничтожить ItemIntList
			

Направление 1 (облегчение движка): 

10) демонтировать и отправить на консервацию класс IntItemList, взамен интегрировать ItemList, метод
добавить в setComponents переименовать в add(id, count), попробовать сделать его уникальным; 
11) демонтировать класс ItemProjectMap СДЕЛАНО
7) убрать все вручную загружаемые спрайты, за исключением служебных, а так же текстовые лейблы СДЕЛАНО 50%

Направление  2 (доработка движка): 

6) изменить объект Верстак на ручную работу дрона, в  
таком случае навык CRAFT остается, функционал как у объекта класса Fabrica.  СДЕЛАНО 20%
5) переименовать вкладку "ФРАКЦИЯ" на "БАЗА"  СДЕЛАНО 100%
6) переименовать permission на allow
4) отладить работу алгоритма назначения работ связанных с CARRY и BUILD.
14) перенести метода getPlace и getPlaceInvert в класс Object.

Направление  3 (нововведения движка):

9) разработать систему блокировок на постройки сделать метод в классе Room boolean isPlace(x, y, )
3) разработать классы: Scaner (наследник Object).
16) ввести в состав объектов: заброшенный цех, неисправный дрон (класс Enviroment).
12) разработать класс Scaner и создать объект глубинный сканер.
13) разработать меню очереди создания предметов для объектов класса Fabrica (отмена)
15) ввести переменную Entry для обозначения содержимого меню: "objects" и "items",
либо сделать общего родителя и один список на двоих (думаю это очень практичный вариант)
17) разработать условное игровое время, и возможность его ускорения, разработать систему 
ивентов привязанных ко времени.
18) всем объектам класса Fabrica внерить список изделий которых возможно изготовить, таким образом 
можно расширять класс Fabrica и класс Bench по "горизонтали".


ФАБРИКИ И ВЕРСТАКИ
Фабрики и верстаки позволяют загружать ресурсы, и получать на выходе готовый продукт без участия дронов.
Фабрики создание деталей.
Верстаки позволяют создавать сборочные единицы.

Работают непосредственно с объектом ItemProjectMap. Отражающим степень готовности предмета.
Таким образом что бы создать объект дрону необходимо принести на верстак Незаконченное изделие 
и начать выполнять работу JobPrimaryCraft, по завершению работы объект класса ItemProjectMap 
удаляется и появляется новый создаваемый предмет.
		
Фабрики:
	41-цех заготовительный:
		доска
    		блок каменный
	42-цех литейный:
		блок стальной
		ось стальная
    		ось медная
    		лист стальной
	43-нефтеперерабатывающий комплекс:
		тяжелая нефть
		легкая нефть
		попутный газ
	44-химкомбинат:
		полупроводник
		топливо дизельное
		текстолит
		смазка
		порох
	45-цех механический: 
		ствол пулемета
		цевье пулемета
		гильза
	46-цех оружейный
		патрон 
	47-цех кабельный
		провод
	
		
Верстаки:
	51-сборочный стол ()
	
	56-
		
			

ГЕНЕРАТОРЫ ЭЛЕКТРОЭНЕРГИИ

объект генератор электричества осуществляет выработку электроэнергии.
виды топлива: древесина, уголь, топливо дизельное. 


Генерируемые объекты:
	Окружение для добычи ресурсов:
		дерево (древесина, каучук) 
		залежи (медная руда, железная руда)
		обломки конструкций (металлолом)
		неисправный дрон (различные запчасти дрона)

Объекты которые возможно построить силами одного дрона с навыком строительство:
У построек должен быть индикатор заполненности ресурсами
	Техника:
		(под вопросом) грузовой корабль ()
		(под вопросом) бронетранспортер ()
		дрон (корпус дрона х1, блок управления дрона х1, шасси дрона х1)    
    		турель защитная (пулемет х1, корпус турели х1)
		НОВОЕ паровой генератор (двигатель твердотопливный х1, пластина стальная х3) (для работы необходимо твердое топливо)
		НОВОЕ генератор дизельный (двигатель электрический х1, провод х3) (для работы нужно топливо дизельное)
		НОВОЕ опора ЛЭП (древесина х1, провод х1) 

	Добывающие объекты:
		бур
		скважина
		НОВОЕ глубинный сканер активирует сканирование местности на наличие полезных ископаемых

	Производство:
		цех заготовительный (камень х10)
		цех литейный (блок каменный х15)
		цех нефтеперерабатывающий (блок стальной х5, шланг х5)
		цех механический (блок стальной х15, пластмасса х5)
		лаборатория химическая (блок стальной х15, стекло х5)
		участок сборки аппаратуры (лист стальной х10, пластмасса х5)
		цех робототехники
		цех оружейный 
		комплекс сборочный (блок стальной х5)
		
	Обеспечение:	
		станция зарядная
		станция ТО

	Сооружения (включая защитные):	
		стена (блок стальной х5),
		дверь (лист стальной х2),
		покрытие (лист стальной х1) (может быть стоянкой, сделать переключатель флага)

	Хранение:
		контейнер стальной (лист стальной х2)
		контейнер древесина (доска х6)
		НОВОЕ терминал предназначенный для передачи и принятия различных грузов-с/на орбит-ы/у Земли.

	Исследование:
		центр исследований
